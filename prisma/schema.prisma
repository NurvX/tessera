// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Event {
    id              Int         @default(autoincrement()) @id
    title           String
    seatType        String
    seatMap         SeatMap?    @relation(fields: [seatMapId], references: [id])
    seatMapId       Int?
    orders          Order[]
    categories      CategoriesOnEvents[]
}

model SeatMap {
    id              Int         @default(autoincrement()) @id
    events          Event[]
    orders          Order[]
}

model Category {
    id              Int         @default(autoincrement()) @id
    label           String
    price           Float
    currency        String
    events          CategoriesOnEvents[]
}

model CategoriesOnEvents {
    event           Event        @relation(fields: [eventId], references: [id])
    eventId         Int
    category        Category     @relation(fields: [categoryId], references: [id])
    categoryId      Int

    @@id([eventId, categoryId])
}

model User {
    id              String      @default(uuid()) @id
    firstName       String
    lastName        String
    email           String
    address         String
    zip             String
    city            String
    countryCode     String
    regionCode      String
    orders          Order[]
}

model Order {
    id              String      @default(uuid()) @id
    user            User        @relation(fields: [userId], references: [id])
    userId          String
    order           String
    paymentType     String
    paymentIntent   String?
    paymentResult   String?
    seatMap         SeatMap?    @relation(fields: [seatMapId], references: [id])
    seatMapId       Int?
    event           Event       @relation(fields: [eventId], references: [id])
    eventId         Int
    shipping        String
    tickets         Ticket[]
}

model Ticket {
    id              String      @default(uuid()) @id
    order           Order       @relation(fields: [orderId], references: [id])
    orderId         String
    used            Boolean     @default(false)
}
